"use strict";const axios=require("axios");const cheerio=require("cheerio");const constants=require("./constants.js");const utils=require("./utils.js");async function getMail(){try{const a=await axios.get(constants.GENERATOR_URL);if(a.status!==200){console.error(constants.ERROR_LOAD_PAGE);return null}const b=cheerio.load(a.data);const c=b(constants.S_INPUT_MAIL_GENERATE).text();return c.split(";")[1]||c}catch(a){console.error(constants.ERROR_LOAD_PAGE);console.error(a.message);throw new Error(a)}}async function getInbox(a,b={},c={}){try{c=c||{};const d=(a.split("@")[0]||"").toLowerCase()||a;const{cookie:e,yp:f,ver:g}=await utils.getCookiesAndYP();const h=await utils.getYJ(e,g);return await utils.detailInbox(d,f,h,g,e,b,c)}catch(a){console.error(constants.ERROR_GET_INBOX);console.error(a.message);throw new Error(a)}}async function deleteInbox(a){try{const{cookie:b,yp:c}=await utils.getCookiesAndYP();const d=await utils.getYJ(b);const e=await utils.getVersion();const{inbox:f}=await getInbox(a);if(f.length>0){const g=f[0].id;const h=constants.DELETE_INBOX_URL(a,g,c,d,e);const i=await axios.get(h,constants.INBOX_HTTP_CONFIG(b,a));return Boolean(200===i.status)}else{return false}}catch(a){console.error(constants.ERROR_DELETE_INBOX);console.error(a.message);throw new Error(a)}}async function readMessage(a,b,c,d=""){try{const{cookie:e}=await utils.getCookiesAndYP();const f=await axios.get(constants.READ_MAIL_URL(a,b),constants.INBOX_HTTP_CONFIG(e,a));const g=cheerio.load(f.data);const h=g(constants.SELECTOR_SUBMIT).text();const i=g(constants.SELECTOR_FROM);const j=g(constants.SELECTOR_DATE);const k=i.length?i.text():g(constants.SELECTOR_FROM_ALT).text();const l=j.length?j.text().replace(k,""):g(constants.SELECTOR_DATE_ALT).text();let m;if(d){d=`${constants.SELECTOR_MAIL} ${d}`;m=c.toLowerCase()==="html"?g(d).html():g(d).text().trim()}else{d="#mail";m=c.toLowerCase()==="html"?g(d).html():g(d).text().trim()}return{id:b,submit:h,from:k,date:l,selector:d,format:c,data:m}}catch(a){console.error(constants.ERROR_READ_MESSAGE);console.error(a.message);throw new Error(a)}}async function writeMessage(a,b,c,d){try{if(!a||!b||!c||!d){console.error(constants.ERROR_MISSING_PARAMETERS)}const{cookie:e}=await utils.getCookiesAndYP();const f=await axios.get(constants.WRITE_MAIL_URL(a),constants.INBOX_HTTP_CONFIG(e,a));if(f.status===200){const f={msgfrom:`${a}@yopmail.com`,msgto:b,msgsubject:c,msgbody:d};const g=await axios.post(constants.SEND_MESSAGE_URL,f,constants.WRITE_MESSAGE_HTTP_CONFIG(e,a));return g.data}return f.data}catch(a){console.error(constants.ERROR_WRITE_MESSAGE);console.error(a.message);throw new Error(a)}}async function deleteMessage(a,b){try{const{cookie:c,yp:d}=await utils.getCookiesAndYP();const e=await utils.getYJ(c);const f=await utils.getVersion();const{inbox:g}=await getInbox(a,{id:b});if(g.length>0){const g=constants.DELETE_MESSAGE_URL(a,b,d,e,f);const h=await axios.get(g,constants.INBOX_HTTP_CONFIG(c,a));return Boolean(200===h.status)}else{return false}}catch(a){console.error(constants.ERROR_DELETE_MESSAGE);console.error(a.message);throw new Error(a)}}module.exports={getMail:getMail,getInbox:getInbox,deleteInbox:deleteInbox,readMessage:readMessage,writeMessage:writeMessage,deleteMessage:deleteMessage};