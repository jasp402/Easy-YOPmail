"use strict";const constants=require("./constants");const axios=require("axios");const cheerio=require("cheerio");const fs=require("fs");function setLocation(a){if(!a||typeof a!=="string")return false;fs.mkdirSync("../.cache",{recursive:true});fs.writeFileSync("../.cache/location",a)}async function validateSearch(a){const b=constants.possibleKeys.some((b=>Object.keys(a).includes(b)||null));if(!b){console.error(constants.ERROR_PARAMETERS_INVALID);return{}}return Object.keys(a).reduce(((b,c)=>{if(constants.possibleKeys.includes(c)){b[c]=a[c]}return b}),{})}async function getVersion(){const a=await axios.get(constants.BASE_URL);if(a.status===200){try{return a.data.match(/\/ver\/(\d+\.\d+)\//)[1]}catch(a){console.error(constants.ERROR_GET_VERSION,a.message)}}else{console.error(constants.ERROR_GET_VERSION)}}async function getCookiesAndYP(){const a=await axios.get(constants.BASE_URL);if(a.status===200){try{const b=cheerio.load(a.data);const c=b(constants.INPUT_YP).val();const d=a.headers["set-cookie"].map((a=>a.split(";")[0])).join("; ");const e=a.data.match(constants.REGEX_LOCATION)[1];const f=a.data.match(/\/ver\/(\d+\.\d+)\//)[1];setLocation(e);return{cookie:d,yp:c,ver:f}}catch(a){console.error(a.message)}}else{console.error(constants.ERROR_GET_COOKIES);return{cookie:null,yp:null}}}async function getYJ(a,b){const c={headers:{Cookie:a}};const d=await axios.get(constants.WEBMAIL_JS_URL(b),c);const e=d.data.match(constants.REGEX_YJ);return e?e[1]:null}async function getTotalMails(a){const b=a.match(constants.REGEX_TOTAL_MAILS);let c=0;if(b){c=b[1].split(",")[0]}else{console.log(constants.ERROR_GET_TOTAL_MAILS)}return Number(c)}function shouldIncludeEmail(a,b){return Object.entries(b).every((([b,c])=>{switch(b){case"id":return a.id===c;case"from":return a.from===c;case"subject":return a.subject===c;case"timestamp":return a.timestamp===c;default:return false}}))}function parseEmail(a){const b=cheerio.load(a);const c=b(a).attr("id");const d=b(a).find(".lmh").text();const e=b(a).find(".lmf").text();const f=b(a).find(".lms").text();return{id:c,from:e,subject:f,timestamp:d}}function getDetailInboxFromPage(a,b){const c=cheerio.load(a);const d=c(".m");return d.map(((a,b)=>parseEmail(b))).toArray().filter((a=>shouldIncludeEmail(a,b)))}async function fetchInboxPage(a,b,c,d,e,f){let g=constants.INBOX_URL(a,b,c,d,e);let h=constants.INBOX_HTTP_CONFIG(f,a);return await axios.get(g,h)}async function detailInbox(a,b,c,d,e,f={},g={}){const h=1;const i=await fetchInboxPage(a,b,c,d,h,e);if(i.status!==200){console.error(constants.ERROR_LOAD_PAGE);return null}const j=i.data;const k=await getTotalMails(j);let l={};if(f&&Object.keys(f).length>0){l=await validateSearch(f)}let m=1;let n=true;let o={};const p=15;const q=[];while(n&&(g.GET_ALL_MAILS===true||m===1)){const d=m===1?j:(await fetchInboxPage(a,b,c,m,e)).data;const f=getDetailInboxFromPage(d,l);o[`page_${m}`]=f.length;q.push(...f);if(m*p>=k){n=false}else{m+=1}}return{settings:g,search:l,totalInbox:k,totalPages:Math.ceil(k/p),mailFromPage:o,totalGetMails:q.length,inbox:q}}module.exports={getCookiesAndYP:getCookiesAndYP,getYJ:getYJ,detailInbox:detailInbox,getVersion:getVersion};